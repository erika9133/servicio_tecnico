#include <QDebug>
#include <QString>
#include <QUuid>
#include <QStringList>
#include "controlador.h"
#include "xml.h"
#include "utils.h"

Controlador::Controlador()
{
    m_consultas = new Consultas();
    m_ws = new WebSocket();
    m_xml = new XML();
    QObject::connect(m_ws,SIGNAL(mensajeRecibido(stringCliente)), this,SLOT(procesarPeticion(stringCliente)));
}

Controlador::~Controlador()
{
    delete m_ws;
    delete m_xml;
    delete m_consultas;
}

void Controlador::procesarPeticion(stringCliente mensajeEntrante)
{
    ///stringCliente es un struc que se usa en varias cosas.
    bool validar = false;
    validar = m_xml->validaXML(&sC.message);
    ///TO DO validar pasando nombre del dtd y no direccion de la ubicacion
    if(validar)
    {
        QString tipoConsulta = m_xml->devolverNodo(&mensajeEntrante.message,"action");
        if(tipoConsulta == "login"){
            QString tiendaUser = m_xml->devolverNodo(&mensajeEntrante.message, "user");
            QString tiendaPass = m_xml->devolverNodo(&mensajeEntrante.message, "pass");
            bool verificacion = false;
            ///Verifica que el usuario esta en la bbdd
            if(m_consultas->verificarLogin(tiendaUser,tiendaPass,"listado_tiendas"))
            {
                verificacion = true;
                ///Si esta en bbdd pero no en la lista de clientes conectados...
                if(!m_ws->m_clientesVerificados.contains(stringCliente.cliente == mensajeEntrante.cliente))
                {
                    stringCliente cliente;
                    cliente.cliente = mensajeEntrante.cliente;
                    cliente.message = tiendaUser;
                    ///Metemos el pclient y su nombre.
                    m_ws->m_clientesVerificados.append(cliente);
                }
            }//end verificar
            ///Devuelve el login de success o no success para que el cliente le pase a otra ventana
            QString xmlLogin = m_xml->generarLogin(verificacion);;
            m_ws->emitTextMessage(xmlLogin,mensajeEntrante.cliente);
            
        }else if(tipoConsulta == "loginStaff"){
            QString tecnicoUser = m_xml->devolverNodo(&mensajeEntrante.message, "user");
            QString tecnicoPass = m_xml->devolverNodo(&mensajeEntrante.message, "pass");
            bool verificacion = false;
            if(m_consultas->verificarLogin(tecnicoUser,tecnicoPass,"tecnicos"))
            {
               verificacion = true;
               if(!m_ws->m_tecnicosVerificados.contains(stringCliente.cliente == mensajeEntrante.cliente))
               {
                   stringCliente cliente;
                   cliente.cliente = mensajeEntrante.cliente;
                   cliente.message = tecnicoUser;
                   ///Metemos el pclient y su nombre.
                   m_ws->m_clientesVerificados.append(cliente);
               }
            }
            QString xmlLogin = m_xml->generarLogin(verificacion);;
            m_ws->emitTextMessage(xmlLogin,mensajeEntrante.cliente);
            //END LOGIN
            
        }else if(tipoConsulta == "dispositivos"){
            QString tipoDispositivo = m_xml->devolverNodo(&mensajeEntrante.message,"consulta");
            QStringList devolverDispositivos = m_consultas->devolverConsultaDosCondiciones("nombre_dispositivo","dispositivos","nombre_dispositivo",tipoDispositivo);
            if(!devolverDispositivos.isEmpty())
            {
                QString envio = m_xml->generarDispositivos(&devolverDispositivos);
                m_ws->emitTextMessage(envio,mensajeEntrante.cliente);
            }
        }else if(tipoConsulta == "orden"){
            ///Solo las tiendas pueden crear ordenes
            if(m_ws->m_clientesVerificados.contains(mensajeEntrante.cliente)){
                
                QString tienda = m_xml->devolverNodo(&m.message,"tienda");
                QString cliente = m_xml->devolverNodo(&m.message,"cliente");
                QString dispositivo = m_xml->devolverNodo(&m.message,"dispositivo");
                //Implementar tecnicos y estados de reparacion
                QUuid tecnicos = m_consultas->devolverUuid("Martin horacio fernandez de la cruz","tecnicos");
                QUuid estados_reparacion = m_consultas->devolverUuid("reparando","estados_reparacion");
                //Implementar*********************************
                QUuid dispositivos = m_consultas->devolverUuid(dispositivo,"dispositivos");
                QUuid listado_tiendas = m_consultas->devolverUuid(tienda,"listado_tiendas");
                if((listado_tiendas != NULL) && (estados_reparacion != NULL) && (dispositivo != NULL))
                {
                    bool checkOrden = m_consultas->crearOrden(cliente,estados_reparacion,tecnicos,dispositivos,listado_tiendas);
                    if(checkOrden)
                    {
                        m_xml->generarRespuestaSimple("ordenExito","ordenExito");
                    }
                }
            }

        }else if(tipoConsulta == "ListarOrden"){

        }else{

        }
        //Else consultas
        }//Esta en lista
    }//Validar
}
